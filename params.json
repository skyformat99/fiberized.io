{"name":"Fiberized.io","tagline":"Asynchronous I/O without Compromises","body":"### Fiberized.IO is a fast and simple networking framework without compromises.\r\n\r\n* <B>Fast</B><BR/>Asynchronous I/O under the hood for maximum speed and throughtput.\r\n* <B>Simple</B><BR/>Fiber based programming model for concise and intuitive development.\r\n* <B>No compromises</B><BR/>Standard C++ thread and iostream compatible API, old-fashion programs just work more efficiently.\r\n\r\nRead the [Wiki](https://github.com/windoze/fibio/wiki) for manuals and references\r\n\r\nThe HTTP server example\r\n-----------------------\r\n```\r\n#include <fibio/fiberize.hpp>\r\n#include <fibio/http_server.hpp>\r\n\r\nusing namespace fibio::http;\r\n\r\nbool handler(server::request &req, server::response &resp, server::connection &conn) {\r\n    resp.body_stream() << \"<HTML><BODY><H1>\"\r\n                       << req.params[\"p\"]\r\n                       << \"</H1></BODY></HTML>\"\r\n                       << std::endl;\r\n    return true;\r\n}\r\n\r\nint fibio::main(int argc, char *argv[]) {\r\n    server svr(server::settings{\r\n        route(path_matches(\"/*p\") >> handler),\r\n        23456\r\n    });\r\n    svr.start();\r\n    svr.join();\r\n}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}